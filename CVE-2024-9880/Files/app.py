from flask import Flask, render_template, request, redirect, url_for, flash, send_file
import pandas as pd
import os
import uuid
from io import StringIO

app = Flask(__name__)
app.secret_key = 'pphreak_1001'

app.config['UPLOAD_FOLDER'] = 'uploads'
app.config['ALLOWED_EXTENSIONS'] = {'csv'}

if not os.path.exists(app.config['UPLOAD_FOLDER']):
    os.makedirs(app.config['UPLOAD_FOLDER'])

def allowed_file(filename):
    return '.' in filename and filename.rsplit('.', 1)[1].lower() in app.config['ALLOWED_EXTENSIONS']

def generate_unique_filename(filename):
    file_extension = filename.rsplit('.', 1)[1].lower()
    unique_filename = str(uuid.uuid4()) + '.' + file_extension
    return unique_filename

@app.route("/", methods=["GET", "POST"])
def sales_analysis():
    if request.method == "POST":
        if "csv_file" in request.files:
            file = request.files["csv_file"]
            if file.filename == "":
                flash("No file selected.", "danger")
                return redirect(request.url)
            if file and allowed_file(file.filename):
                try:
                    filename = generate_unique_filename(file.filename)
                    filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)
                    file.save(filepath)
                    return redirect(url_for("query_form", filename=filename))
                except Exception as e:
                    flash(f"Error: {str(e)}", "danger")
            else:
                flash("Invalid file type. Please upload a CSV file.", "danger")
        elif "generate_report" in request.form:
            try:
                report_data = pd.DataFrame({
                    "Month": ["January", "February", "March"],
                    "Sales": [10000, 15000, 20000]
                })
                report_csv = StringIO()
                report_data.to_csv(report_csv, index=False)
                report_csv.seek(0)
                return send_file(
                    report_csv,
                    mimetype="text/csv",
                    as_attachment=True,
                    download_name="sales_report.csv"
                )
            except Exception as e:
                flash(f"Error generating report: {str(e)}", "danger")

    return render_template("sales_analysis.html")

@app.route("/query", methods=["GET", "POST"])
def query_form():
    filename = request.args.get("filename")
    if not filename or not os.path.exists(os.path.join(app.config['UPLOAD_FOLDER'], filename)):
        flash("No file uploaded or file path invalid", "danger")
        return redirect(url_for("sales_analysis"))

    df = pd.read_csv(os.path.join(app.config['UPLOAD_FOLDER'], filename))

    if request.method == "POST":
        query = request.form.get("query")
        try:
            result = df.query(query)
            if isinstance(result, pd.Series):
                result = result.to_frame()
            return render_template("query_results.html", result=result.to_html(), filename=filename)
        except Exception as e:
            flash(f"Error while executing query: {str(e)}", "danger")
            return redirect(request.url)

    return render_template("query_form.html", filename=filename)

if __name__ == "__main__":
    app.run(debug=False, port=9999)